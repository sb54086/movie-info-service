plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'jacoco'
	id 'org.sonarqube' version "3.0"
}

group = 'com.example'
//version = '0.0.1-SNAPSHOT'
version = '${build_version}'
sourceCompatibility = '1.8'

 jacoco {
	toolVersion="0.8.5"
	reportsDir=file("$buildDir/customJacocoReportDir")
}

 sonarqube {
	 properties {
		 property 'sonar.host.url', System.properties("sonar.host.url")
		 property 'sonar.jacoco.reportPaths', '${buildDir}/jacoco/test.exec'
	 }
 }

 /*jacocoTestReport {
	      reports {
				xml.enable true
				csv.enable false
				html.destination file("${buildDir}/jacocoHtml")
				}
 }*/
test {

	 finalizedBy jacocoTestReport

 }

repositories {
	mavenCentral()
	//mavenLocal()

}
 jar {
	   manifest {
		   attributes('Implementation-Title': project.name,
				   'Implementation-Version': project.version,
				   'Main-Class': 'com.example.mongoapp.MongoAppApplication',
		            )
	   }
 }
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	compile group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'



	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}
